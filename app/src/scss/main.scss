// This is the default scss file, more specific styling is defined directly into components.
// It it imported in `scr/App.vue` style tag.

// Dependencies variables overrides and custom variables
// Variables overrides are defined before actual SCSS imports
@import 'variables';


// Dependencies SCSS imports
// `~` allow to import a node_modules folder (resolved by Webpack)
@import '~bootstrap/scss/bootstrap.scss';
@import '~bootstrap-vue/src/index.scss';

// Import fonts
@import 'font';
@import '~fork-awesome/scss/fork-awesome.scss';


:root {
  --background-color: #ffffff;
  --background-color-secondary: #fafbfc;
  --border-color: #c5d9e8;
  --font-color: #333;
  --font-color-secondary: #3f536e;

  --black: #2c405a;
  --blue: #0079c4;
  --green: #81c926;
  --grey: #8eacc5;
  --orange: #fd7b1f;
  --purple: #ab7ef6;
  --red: #e0102b;
  --turquoise: #26c1c9;
  --white: #ffffff;
  --yellow: #faca00;

  --active: #0079c4;
  --description: #8eacc5;
  --error: #e0102b;
  --normal: #c5d9e8;
  --info: #0079c4;
  --success: #81c926;
  --warning: #ffc107;
}

[dark-theme="true"] {
  /* Variables for dark mode */
  --background-color: #202025;
  --background-color-secondary: #273142;
  --border-color: #313d4f;
  --font-color: #ffffff;
  --font-color-secondary: #a9c7df;

  --black: #25374f;
  --blue: #0093ee;
  --green: #96bf47;
  --grey: #a9c7df;
  --orange: #ffb610;
  --purple: #ab7ef6;
  --red: #e0102b;
  --turquoise: #26c1c9;
  --white: #ffffff;
  --yellow: #ffc02a;

  --active: #0093ee;
  --description: #8eacc5;
  --error: #e0102b;
  --normal: #313d4f;
  --info: #0093ee;
  --success: #96bf47;
  --warning: #ffc02a;
}

// Style overrides happens after dependencies imports

html {
  min-height: 100vh;
}
body {
  overflow-x: hidden;
  min-height: 100vh;
  margin: 0;
}

#app {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.menu-list .list-group-item {
  padding: $list-group-item-padding-y 0;
  display: flex;
  align-items: center;
}


// Bootstrap overrides

// Overwrite list-group-item variants to lighter ones (used in diagnosis for example)
@each $color, $value in $theme-colors {
  @include list-group-item-variant($color, theme-color-level($color, -11), theme-color-level($color, 6));
}

// Add breakpoints for w-*
@each $breakpoint in map-keys($grid-breakpoints) {
  @each $size, $length in $sizes {
    @include media-breakpoint-up($breakpoint) {
      .w-#{$breakpoint}-#{$size} {
        width: $length !important;
      }
    }
  }
}

// Add xs sized btn
.btn-xs {
  @include button-size($btn-padding-y-xs, $btn-padding-x-xs, $btn-font-size-sm, $btn-line-height-xs, $btn-border-radius-sm);
}

// Allow state of input group to be displayed under the group
.input-group .is-invalid ~ .invalid-feedback {
  display: block;
}


.tooltip { top: 0; }
// Descriptive list (<b-row /> elems with <b-col> inside)
// FIXME REMOVE when every infos switch to `DescriptionRow`
.row-line {
  @include media-breakpoint-up(md) {
    &:hover {
      background-color: rgba(0, 0, 0, 0.05);
      border-radius: 0.2rem;
    }
  }

  @include media-breakpoint-down(sm) {
      flex-direction: column;

      &:not(:last-of-type) {
        margin-bottom: 0.5rem;
        padding-bottom: 0.5rem;
        border-bottom: $border-width solid $card-border-color;
      }
  }
}

.card + .card {
  margin-top: 2rem;
}
.card-deck .card + .card {
  margin-top: 0;
}

.card, .list-group-item {
  h1, h2, h3, h4, h5, h6 {
    margin: 0;
  }
}

.card-header, .list-group-item {
  h1, h2, h3, h4, h5, h6 {
    font-weight: $font-weight-normal;
  }
}

h3.card-title {
  margin-bottom: 1em;
  border-bottom: solid 1px $hr-border-color;
}

// collapse icon
.not-collapsed > .icon {
  transform: rotate(-90deg);
}
.collapsed > .icon {
  transform: rotate(90deg);
  position: relative;
  top: 2px;
}

// limit the size of toggle dropdown buttons to a square
.dropdown-toggle-split {
  max-width: 2.5rem;
}

// Fork-awesome overrides
.fa-fw {
  width: 1.25em !important;
}

// custom css
.actions {
  margin-bottom: 2rem;
  display: flex;
  justify-content: space-between;

  @include media-breakpoint-down(xs) {
    .buttons {
      flex-direction: column;
      justify-content: space-between;
    }
  }

  @include media-breakpoint-down(sm) {
    flex-direction: column-reverse;
    margin-bottom: 2rem;

    .buttons {
      display: flex;
      justify-content: space-between;

      .btn {
        margin-bottom: .5rem;
      }
    }
  }

  @include media-breakpoint-up(md) {
    .btn ~ .btn {
      margin-left: .5rem;
    }
    .btn ~ .dropdown-toggle-split {
      margin-left: 0;
    }
  }
}
// Do not display ligatures in invalid-feedback to avoid confusion.
.invalid-feedback {
  code {
    font-variant-ligatures: none;
  }
}

.alert p:last-child {
  margin-bottom: 0;
}

code {
  background: $light;
}

.log {
  margin-bottom: 0;
  padding: 1rem;
  background-color: $light;
  overflow: auto;
}

.unselectable {
  -webkit-user-select: none;
  -webkit-touch-callout: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
